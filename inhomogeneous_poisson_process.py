# -*- coding: utf-8 -*-
# ==============================================================
# 非定常（非一様）ポアソン過程によるスパイク列の生成
# --------------------------------------------------------------
# このスクリプトでは、時間とともに変化する発火率を持つ
# 「非定常ポアソン過程（Inhomogeneous Poisson Process）」を用いて、
# ニューロン群の確率的スパイク発火をシミュレーションする。
# ==============================================================
import numpy as np
import matplotlib.pyplot as plt

# ==============================================================
# 乱数シードの固定
# --------------------------------------------------------------
# 再現性のある結果を得るために乱数の初期シードを固定。
# ==============================================================
np.random.seed(seed=0)

# ==============================================================
# シミュレーション設定
# --------------------------------------------------------------
# dt: 時間刻み幅 [s]
# T : シミュレーション時間 [s]
# nt: ステップ数 = T / dt
# n_neuron: ニューロン数
# t : 時間ベクトル
# ==============================================================
dt = 1e-3
T = 1
nt = round(T / dt)  # シミュレーション時間 (1秒, 1ms刻み)
n_neuron = 10  # ニューロンの数
t = np.arange(nt) * dt  # 時間軸 [s]

# ==============================================================
# 非定常発火率の設定
# --------------------------------------------------------------
# 各時刻ごとに変化する発火率 fr(t) を設定。
# fr(t) = 30 * sin(10t)^2 [Hz]
# → 発火率が周期的に0〜30Hzの範囲で変動。
# np.expand_dims(..., 1) により [nt, 1] の形状に変換し、
# ニューロン数方向にブロードキャスト可能とする。
# ==============================================================
fr = np.expand_dims(30 * np.sin(10 * t) ** 2, 1)  # [Hz]

# ==============================================================
# スパイク列の生成
# --------------------------------------------------------------
# np.random.rand(nt, n_neuron):
#   時間×ニューロンの一様乱数行列。
# 各要素が fr(t)*dt より小さい確率でスパイクが発生（=1）。
# → これにより時間依存の発火率に基づいたポアソンスパイク列が生成される。
# ==============================================================
spikes = np.where(np.random.rand(nt, n_neuron) < fr * dt, 1, 0)

# ==============================================================
# スパイク数の出力
# --------------------------------------------------------------
# 全ニューロン・全時間におけるスパイクの総数を表示。
# ==============================================================
print("Num. of spikes:", np.sum(spikes))

# ==============================================================
# 可視化
# --------------------------------------------------------------
# 上段：時間変化する発火率 fr(t)
# 下段：各ニューロンのスパイク列（ラスタープロット）
# ==============================================================
plt.figure(figsize=(5, 4))

# --- 発火率の時間変化 ---
plt.subplot(2, 1, 1)
plt.plot(t, fr[:, 0], color="k")
plt.ylabel("Firing rate (Hz)")
plt.xlim(0, T)

# --- スパイクラスタープロット ---
plt.subplot(2, 1, 2)
for i in range(n_neuron):
    plt.plot(t, spikes[:, i] * (i + 1), "ko", markersize=2, rasterized=True)

plt.xlabel("Time (s)")
plt.ylabel("Neuron index")
plt.xlim(0, T)
plt.ylim(0.5, n_neuron + 0.5)
plt.tight_layout()

# ==============================================================
# 出力の保存
# --------------------------------------------------------------
# 結果をPDFとして保存し、時間依存的ポアソン発火の特性を確認可能。
# ==============================================================
plt.savefig("inhomogenous_poisson_process.pdf", dpi=300)
plt.show()

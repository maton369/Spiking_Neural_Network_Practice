# -*- coding: utf-8 -*-
# ==============================================================
# スパイク時刻依存可塑性（STDP: Spike-Timing Dependent Plasticity）の実装例
# --------------------------------------------------------------
# このスクリプトでは、シナプス前後のスパイク時刻差 Δt に基づく
# シナプス重み変化 Δw を可視化する。
#
# STDPは「スパイクの順序」に応じてシナプス強度が変化する学習則であり：
#   - pre → post（Δt > 0）：シナプス強化（Long-Term Potentiation, LTP）
#   - post → pre（Δt < 0）：シナプス抑制（Long-Term Depression, LTD）
# という特徴的な非対称曲線を示す。
# ==============================================================

import numpy as np
import matplotlib.pyplot as plt

# ==============================================================
# STDPパラメータ設定
# --------------------------------------------------------------
# tau_p : LTPの時定数 (ms)
# tau_m : LTDの時定数 (ms)
# A_p   : LTPの最大変化量
# A_m   : LTDの最大変化量（LTPよりわずかに大きく設定）
# ==============================================================
tau_p = tau_m = 20  # ms（ポテンシエーション／デプレッション両方の時定数）
A_p = 0.01  # 長期増強（LTP）の振幅
A_m = 1.05 * A_p  # 長期抑圧（LTD）の振幅（僅かに強め）

# ==============================================================
# スパイク時刻差 Δt の定義
# --------------------------------------------------------------
# Δt = t_post - t_pre
# - Δt > 0 → preスパイクが先（学習強化）
# - Δt < 0 → postスパイクが先（学習抑制）
# ==============================================================
dt = np.arange(-50, 50, 1)  # ms

# ==============================================================
# STDPの学習則
# --------------------------------------------------------------
# Δw(Δt) = A_p * exp(-Δt / τ_p)   (Δt > 0)
#         - A_m * exp(Δt / τ_m)   (Δt < 0)
# --------------------------------------------------------------
# 結果として、非対称な双指数関数形状の学習曲線を得る。
# ==============================================================
dw = A_p * np.exp(-dt / tau_p) * (dt > 0) - A_m * np.exp(dt / tau_m) * (dt < 0)

# ==============================================================
# 結果の可視化
# --------------------------------------------------------------
# 横軸：スパイク時刻差 Δt
# 縦軸：シナプス重み変化 Δw
# LTP・LTDの非対称なカーブを描画。
# ==============================================================
plt.figure(figsize=(5, 4))
plt.plot(dt, dw, color="k", linewidth=1.5)
plt.hlines(0, -50, 50, linestyles="dotted", color="gray")
plt.xlabel("$\Delta t$ (ms)")  # 時刻差
plt.ylabel("$\Delta w$")  # 重み変化
plt.title("Spike-Timing Dependent Plasticity (STDP)")
plt.xlim(-50, 50)
plt.tight_layout()
plt.savefig("stdp.pdf")
# plt.show()

# ==============================================================
# 💬 コメント
# --------------------------------------------------------------
# - Δt > 0 の領域では pre→post の順でスパイクが発生し、
#   シナプス結合が強化される（LTP）。
# - Δt < 0 の領域では post→pre の順でスパイクが発生し、
#   シナプス結合が弱化される（LTD）。
# - この非対称性が、時間的相関を持つスパイク列の学習や
#   因果関係の符号化に寄与する。
# ==============================================================
